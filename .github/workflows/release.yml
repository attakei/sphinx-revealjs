name: Release new version

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          architecture: x64
          python-version: 3.9
      - name: Build packages
        id: build_package
        run: |
          python -m pip install poetry
          python tools/fetch_revealjs.py
          poetry build
          echo ::set-output name=targz::$(basename $(ls dist/*tar.gz))
          echo ::set-output name=wheel::$(basename $(ls dist/*whl))
      - name: Create release on GitHub
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: Changelog is https://github.com/attakei/sphinx-revealjs/blob/${{ github.ref_name }}/CHANGES.rst
          draft: false
          prerelease: false
      - name: Upload sdist to GitHub
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/${{ steps.build_package.outputs.targz }}
          asset_name: ${{ steps.build_package.outputs.targz }}
          asset_content_type: application/gzip
      - name: Upload wheel to GitHub
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/${{ steps.build_package.outputs.wheel }}
          asset_name: ${{ steps.build_package.outputs.wheel }}
          asset_content_type: application/zip
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
